module name.martingeisse.esdk.riscv.rtl.ram.RamAgent;

interface {

    in clock clk;
    in bit reset;

    // CPU interface
    in vector[24] cpuWordAddress;
    in bit cpuEnable, cpuWrite;
    in vector[32] cpuWriteData;
    in vector[4] cpuWriteMask;
    out vector[32] cpuReadData;
    out bit cpuAcknowledge;

    // RAM controller interface
    out vector[24] ramRequestWordAddress;
    out bit ramRequestEnable, ramRequestWrite;
    out vector[32] ramRequestWriteData;
    out vector[4] ramRequestWriteMask;
    in vector[32] ramResponseReadData;
    in bit ramResponseAcknowledge;

}

do (*) {
    ramRequestWordAddress = cpuWordAddress;
    ramRequestEnable = cpuEnable;
    ramRequestWrite = cpuWrite;
    ramRequestWriteData = cpuWriteData;
    ramRequestWriteMask = cpuWriteMask;
    cpuReadData = ramResponseReadData;
    cpuAcknowledge = ramResponseAcknowledge;
}
